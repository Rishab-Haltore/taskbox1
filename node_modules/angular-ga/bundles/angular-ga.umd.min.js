!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core")):"function"==typeof define&&define.amd?define(["exports","@angular/core"],t):t(e["angular-ga"]={},e.ng.core)}(this,function(e,t){"use strict";var n=new t.InjectionToken("angular-ga TrackingId"),o=new t.InjectionToken("angular-ga Tracking Options"),r=function(){function e(e,n){this.event=new t.EventEmitter,this.pageview=new t.EventEmitter,e&&this.configure(e,n)}return e.prototype.configure=function(e,t){var n=this;void 0===t&&(t="auto"),ga("create",e,t),ga("send","pageview"),this.event.subscribe(function(e){return n.onEvent(e)}),this.pageview.subscribe(function(e){return n.onPageView(e)})},e.prototype.set=function(e,t){if("string"!=typeof e&&"object"!=typeof e)throw new TypeError("Expected `fieldName` to be of type `string` or `object`, got `"+typeof e+"`");if("string"==typeof e&&t===undefined)throw new TypeError("Expected `fieldValue` to not be `undefined`");"object"==typeof e?ga("set",e):ga("set",e,t)},e.prototype.onEvent=function(e){ga("send","event",e.category,e.action,e.label,e.value)},e.prototype.onPageView=function(e){var t={};e.title&&(t.title=e.title),ga("send","pageview",e.page,t)},e}();r.decorators=[{type:t.Injectable}],r.ctorParameters=function(){return[{type:undefined,decorators:[{type:t.Optional},{type:t.Inject,args:[n]}]},{type:undefined,decorators:[{type:t.Optional},{type:t.Inject,args:[o]}]}]};var i=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[r]}},e}();i.decorators=[{type:t.NgModule,args:[{imports:[],declarations:[],exports:[]}]}],i.ctorParameters=function(){return[]},e.GoogleAnalyticsModule=i,e.GoogleAnalyticsService=r,e.GA_TOKEN=n,e.GA_OPTIONS=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-ga.umd.min.js.map
