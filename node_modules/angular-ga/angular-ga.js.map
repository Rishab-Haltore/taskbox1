{"version":3,"file":"angular-ga.js","sources":["ts/src/angular-ga.ts","ts/src/lib/ga.module.ts","ts/src/lib/ga.service.ts","ts/src/lib/ga.token.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {GoogleAnalyticsModule,GoogleAnalyticsService,GA_TOKEN,GA_OPTIONS} from './index';\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {GoogleAnalyticsService} from './ga.service';\nexport class GoogleAnalyticsModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GoogleAnalyticsModule,\n\t\t\tproviders: [\n\t\t\t\tGoogleAnalyticsService\n\t\t\t]\n\t\t};\n\t}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n\timports: [],\n\tdeclarations: [],\n\texports: []\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GoogleAnalyticsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nGoogleAnalyticsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGoogleAnalyticsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable, Inject, Optional, EventEmitter} from '@angular/core';\n\nimport {GA_TOKEN, GA_OPTIONS} from './ga.token';\nimport {Event} from './interfaces/event';\nimport {PageView} from './interfaces/pageview';\nimport {TrackingOptions} from './interfaces/tracking-options';\n\ndeclare const ga: any;\nexport class GoogleAnalyticsService {\n\tevent = new EventEmitter<Event>();\n\tpageview = new EventEmitter<PageView>();\n/**\n * @param {?} trackingId\n * @param {?} options\n */\nconstructor(\n\t\t  trackingId: string,\n\t\t  options: any\n\t) {\n\t\tif (trackingId) {\n\t\t\tthis.configure(trackingId, options);\n\t\t}\n\t}\n/**\n * @param {?} trackingId\n * @param {?=} options\n * @return {?}\n */\nconfigure(trackingId: string, options: TrackingOptions | string = 'auto') {\n\t\tga('create', trackingId, options);\n\t\tga('send', 'pageview');\n\n\t\tthis.event.subscribe((x: Event) => this.onEvent(x));\n\t\tthis.pageview.subscribe((x: PageView) => this.onPageView(x));\n\t}\n\n\tset(fieldsObject: any): void;\n\tset(fieldName: string, fieldValue: any): void;\n/**\n * @param {?} key\n * @param {?=} value\n * @return {?}\n */\nset(key: any, value?: any) {\n\t\tif (typeof key !== 'string' && typeof key !== 'object') {\n\t\t\tthrow new TypeError(`Expected \\`fieldName\\` to be of type \\`string\\` or \\`object\\`, got \\`${typeof key}\\``);\n\t\t}\n\n\t\tif (typeof key === 'string' && value === undefined) {\n\t\t\tthrow new TypeError('Expected `fieldValue` to not be `undefined`');\n\t\t}\n\n\t\tif (typeof key === 'object') {\n\t\t\tga('set', key);\n\t\t} else {\n\t\t\tga('set', key, value);\n\t\t}\n\t}\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onEvent(event: Event) {\n\t\tga('send', 'event', event.category, event.action, event.label, event.value);\n\t}\n/**\n * @param {?} pageview\n * @return {?}\n */\nprivate onPageView(pageview: PageView) {\n\t\tconst /** @type {?} */ fieldsObject: any = {};\n\n\t\tif (pageview.title) {\n\t\t\tfieldsObject.title = pageview.title;\n\t\t}\n\n\t\tga('send', 'pageview', pageview.page, fieldsObject);\n\t}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [GA_TOKEN, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [GA_OPTIONS, ] }, ]},\n];\n}\n\nfunction GoogleAnalyticsService_tsickle_Closure_declarations() {\n/** @type {?} */\nGoogleAnalyticsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGoogleAnalyticsService.ctorParameters;\n/** @type {?} */\nGoogleAnalyticsService.prototype.event;\n/** @type {?} */\nGoogleAnalyticsService.prototype.pageview;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {InjectionToken} from '@angular/core';\n\nexport const /** @type {?} */ GA_TOKEN = new InjectionToken('angular-ga TrackingId');\nexport const /** @type {?} */ GA_OPTIONS = new InjectionToken('angular-ga Tracking Options');\n"],"names":[],"mappings":"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"}
